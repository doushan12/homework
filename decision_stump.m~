function [k, a, d] = decision_stump(X, y, w)
% decision_stump returns a rule ...
% h(x) = d if x(k) ??? a, ???d otherwise,
%
% Input
%     X : n * p matrix, each row a sample
%     y : n * 1 vector, each row a label
%     w : n * 1 vector, each row a weight
%
% Output
%     k : the optimal dimension
%     a : the optimal threshold
%     d : the optimal d, 1 or -1

% total time complexity required to be O(p*n*logn) or less
%%% Your Code Here %%%
p=size(X,2);
error=zeros(p,1);
a_p=zeros(p,1);
d_p=zeros(p,1);

for i=1:p
    [X_isort,X_iseq]=sort(X);
    cumsum_yw=cumsum(y(X_iseq).*w(X_iseq));
    [c_max]
    
    
    
    
end


%%% Your Code Here %%%
end